-- MySQL Script generated by MySQL Workbench
-- Ut 26. február 2019, 10:23:09 CET
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema sovygo
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema sovygo
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `sovygo` DEFAULT CHARACTER SET utf8 ;
USE `sovygo` ;

-- -----------------------------------------------------
-- Table `sovygo`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sovygo`.`user` (
  `iduser` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(75) NOT NULL,
  `salt` VARCHAR(16) NOT NULL,
  `password` VARCHAR(256) NOT NULL,
  `auth` VARCHAR(45) NULL,
  `created` DATETIME NULL DEFAULT CURRENT_TIMESTAMP,
  `email` VARCHAR(100) NOT NULL,
  `profilepicture` VARCHAR(155) NULL,
  `active` CHAR NOT NULL DEFAULT 'n',
  PRIMARY KEY (`iduser`),
  UNIQUE INDEX `username_UNIQUE` (`username` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sovygo`.`lastlogin`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sovygo`.`lastlogin` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `userid` INT NULL,
  `date` DATETIME NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `succes` CHAR NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_lastlogin_1_idx` (`userid` ASC),
  CONSTRAINT `fk_lastlogin_1`
    FOREIGN KEY (`userid`)
    REFERENCES `sovygo`.`user` (`iduser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sovygo`.`loginincident`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sovygo`.`loginincident` (
  `idloginincident` INT NOT NULL AUTO_INCREMENT,
  `userid` INT NOT NULL,
  `date` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `ip` CHAR(39) NULL,
  PRIMARY KEY (`idloginincident`),
  UNIQUE INDEX `idloginincident_UNIQUE` (`idloginincident` ASC),
  INDEX `fk_loginincident_1_idx` (`userid` ASC),
  CONSTRAINT `fk_loginincident_1`
    FOREIGN KEY (`userid`)
    REFERENCES `sovygo`.`user` (`iduser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sovygo`.`userdetail`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sovygo`.`userdetail` (
  `iduserdetail` INT NOT NULL AUTO_INCREMENT,
  `userid` INT NOT NULL,
  `name` VARCHAR(75) NOT NULL,
  `surname` VARCHAR(75) NOT NULL,
  `email` VARCHAR(100) NOT NULL,
  `class` VARCHAR(45) NULL,
  PRIMARY KEY (`iduserdetail`),
  UNIQUE INDEX `userid_UNIQUE` (`userid` ASC),
  CONSTRAINT `fk_userdetail_1`
    FOREIGN KEY (`userid`)
    REFERENCES `sovygo`.`user` (`iduser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sovygo`.`group`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sovygo`.`group` (
  `idgroup` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(55) NOT NULL,
  `created` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `createdby` INT NOT NULL,
  PRIMARY KEY (`idgroup`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC),
  INDEX `fk_group_1_idx` (`createdby` ASC),
  CONSTRAINT `fk_group_1`
    FOREIGN KEY (`createdby`)
    REFERENCES `sovygo`.`user` (`iduser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sovygo`.`groupdetail`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sovygo`.`groupdetail` (
  `idgroupdetail` INT NOT NULL AUTO_INCREMENT,
  `userid` INT NOT NULL,
  `role` VARCHAR(75) NULL,
  `groupid` INT NOT NULL,
  PRIMARY KEY (`idgroupdetail`),
  INDEX `fk_groupdetail_1_idx` (`userid` ASC),
  INDEX `fk_groupdetail_2_idx` (`groupid` ASC),
  CONSTRAINT `fk_groupdetail_1`
    FOREIGN KEY (`userid`)
    REFERENCES `sovygo`.`user` (`iduser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_groupdetail_2`
    FOREIGN KEY (`groupid`)
    REFERENCES `sovygo`.`group` (`idgroup`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sovygo`.`project`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sovygo`.`project` (
  `idproject` INT NOT NULL AUTO_INCREMENT,
  `projectname` VARCHAR(75) NOT NULL,
  `updated` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `hooksecret` VARCHAR(45) NULL,
  PRIMARY KEY (`idproject`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sovygo`.`followuser`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sovygo`.`followuser` (
  `idfollowuser` INT NOT NULL AUTO_INCREMENT,
  `userid` INT NULL,
  `following` INT NULL,
  PRIMARY KEY (`idfollowuser`),
  INDEX `fk_followuser_1_idx` (`userid` ASC),
  INDEX `fk_followuser_2_idx` (`following` ASC),
  CONSTRAINT `fk_followuser_1`
    FOREIGN KEY (`userid`)
    REFERENCES `sovygo`.`user` (`iduser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_followuser_2`
    FOREIGN KEY (`following`)
    REFERENCES `sovygo`.`user` (`iduser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sovygo`.`followproject`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sovygo`.`followproject` (
  `idfollowproject` INT NOT NULL AUTO_INCREMENT,
  `userid` INT NOT NULL,
  `projectid` INT NOT NULL,
  PRIMARY KEY (`idfollowproject`),
  INDEX `fk_followproject_1_idx` (`userid` ASC),
  INDEX `fk_followproject_2_idx` (`projectid` ASC),
  CONSTRAINT `fk_followproject_1`
    FOREIGN KEY (`userid`)
    REFERENCES `sovygo`.`user` (`iduser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_followproject_2`
    FOREIGN KEY (`projectid`)
    REFERENCES `sovygo`.`project` (`idproject`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sovygo`.`projectdetail`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sovygo`.`projectdetail` (
  `idprojectdetail` INT NOT NULL AUTO_INCREMENT,
  `projectid` INT NOT NULL,
  `created` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `createdby` INT NOT NULL,
  `active` CHAR NULL,
  `linkdeploy` VARCHAR(125) NULL,
  `linkgit` VARCHAR(125) NULL,
  PRIMARY KEY (`idprojectdetail`),
  INDEX `fk_projectdetail_1_idx` (`projectid` ASC),
  INDEX `fk_projectdetail_2_idx` (`createdby` ASC),
  CONSTRAINT `fk_projectdetail_1`
    FOREIGN KEY (`projectid`)
    REFERENCES `sovygo`.`project` (`idproject`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_projectdetail_2`
    FOREIGN KEY (`createdby`)
    REFERENCES `sovygo`.`user` (`iduser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sovygo`.`projectmember`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sovygo`.`projectmember` (
  `idprojectmember` INT NOT NULL AUTO_INCREMENT,
  `userid` INT NOT NULL,
  `projectid` INT NOT NULL,
  PRIMARY KEY (`idprojectmember`),
  INDEX `fk_projectmember_1_idx` (`userid` ASC),
  INDEX `fk_projectmember_2_idx` (`projectid` ASC),
  CONSTRAINT `fk_projectmember_1`
    FOREIGN KEY (`userid`)
    REFERENCES `sovygo`.`user` (`iduser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_projectmember_2`
    FOREIGN KEY (`projectid`)
    REFERENCES `sovygo`.`project` (`idproject`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sovygo`.`token`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sovygo`.`token` (
  `idtoken` INT NOT NULL AUTO_INCREMENT,
  `created` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `userid` INT NOT NULL,
  `sessionid` VARCHAR(45) NULL,
  `token` VARCHAR(45) NULL,
  PRIMARY KEY (`idtoken`),
  INDEX `fk_token_1_idx` (`userid` ASC),
  CONSTRAINT `fk_token_1`
    FOREIGN KEY (`userid`)
    REFERENCES `sovygo`.`user` (`iduser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sovygo`.`activationtoken`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sovygo`.`activationtoken` (
  `idactivationtoken` INT NOT NULL AUTO_INCREMENT,
  `created` DATETIME NULL DEFAULT CURRENT_TIMESTAMP,
  `userid` INT NULL,
  `activationtoken` VARCHAR(45) NULL,
  `approved` CHAR NULL DEFAULT 'n',
  PRIMARY KEY (`idactivationtoken`),
  INDEX `fk_activationtoken_1_idx` (`userid` ASC),
  CONSTRAINT `fk_activationtoken_1`
    FOREIGN KEY (`userid`)
    REFERENCES `sovygo`.`user` (`iduser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sovygo`.`database`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sovygo`.`database` (
  `iddatabase` INT NOT NULL AUTO_INCREMENT,
  `dbname` VARCHAR(75) NOT NULL,
  `owner` INT NOT NULL,
  PRIMARY KEY (`iddatabase`),
  INDEX `fk_database_1_idx` (`owner` ASC),
  CONSTRAINT `fk_database_1`
    FOREIGN KEY (`owner`)
    REFERENCES `sovygo`.`user` (`iduser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sovygo`.`dbuser`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sovygo`.`dbuser` (
  `iddbuser` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(75) NOT NULL,
  `owner` INT NOT NULL,
  PRIMARY KEY (`iddbuser`),
  INDEX `fk_dbuser_1_idx` (`owner` ASC),
  CONSTRAINT `fk_dbuser_1`
    FOREIGN KEY (`owner`)
    REFERENCES `sovygo`.`user` (`iduser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sovygo`.`asigneduser`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sovygo`.`asigneduser` (
  `idasigneduser` INT NOT NULL AUTO_INCREMENT,
  `database` INT NOT NULL,
  `user` INT NOT NULL,
  PRIMARY KEY (`idasigneduser`),
  INDEX `fk_asigneduser_1_idx` (`database` ASC),
  INDEX `fk_asigneduser_2_idx` (`user` ASC),
  CONSTRAINT `fk_asigneduser_1`
    FOREIGN KEY (`database`)
    REFERENCES `sovygo`.`database` (`iddatabase`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_asigneduser_2`
    FOREIGN KEY (`user`)
    REFERENCES `sovygo`.`dbuser` (`iddbuser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sovygo`.`linuxuser`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sovygo`.`linuxuser` (
  `idlinuxuser` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(75) NOT NULL,
  `createdby` INT NOT NULL,
  `created` DATETIME NULL DEFAULT current_timestamp,
  PRIMARY KEY (`idlinuxuser`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sovygo`.`linuxport`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sovygo`.`linuxport` (
  `idlinuxport` INT NOT NULL AUTO_INCREMENT,
  `port` INT UNSIGNED NOT NULL,
  `changed` DATETIME NULL DEFAULT current_timestamp on update current_timestamp,
  `changedby` INT NULL,
  `available` CHAR NULL DEFAULT 'y',
  `open` CHAR NULL DEFAULT 'n',
  PRIMARY KEY (`idlinuxport`))
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
